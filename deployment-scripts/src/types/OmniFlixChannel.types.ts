/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Addr = string;
export type Uint128 = string;
export interface InstantiateMsg {
  admin: Addr;
  channel_creation_fee: Coin[];
  channels_collection_id: string;
  channels_collection_name: string;
  channels_collection_symbol: string;
  fee_collector: Addr;
  reserved_usernames: string[];
}
export interface Coin {
  amount: Uint128;
  denom: string;
}
export type ExecuteMsg = {
  pause: {};
} | {
  unpause: {};
} | {
  set_pausers: {
    pausers: string[];
  };
} | {
  publish: {
    asset_type: AssetType;
    channel_id: string;
    is_visible: boolean;
    playlist_name?: string | null;
    salt: Binary;
  };
} | {
  unpublish: {
    channel_id: string;
    publish_id: string;
  };
} | {
  asset_update_details: {
    channel_id: string;
    is_visible: boolean;
    publish_id: string;
  };
} | {
  playlist_create: {
    channel_id: string;
    playlist_name: string;
  };
} | {
  playlist_delete: {
    channel_id: string;
    playlist_name: string;
  };
} | {
  playlist_add_asset: {
    asset_channel_id: string;
    channel_id: string;
    playlist_name: string;
    publish_id: string;
  };
} | {
  playlist_remove_asset: {
    channel_id: string;
    playlist_name: string;
    publish_id: string;
  };
} | {
  playlist_refresh: {
    channel_id: string;
    playlist_name: string;
  };
} | {
  channel_create: {
    collaborators?: string[] | null;
    description: string;
    salt: Binary;
    user_name: string;
  };
} | {
  channel_delete: {
    channel_id: string;
  };
} | {
  channel_update_details: {
    channel_id: string;
    description: string;
  };
} | {
  set_config: {
    admin?: string | null;
    channel_creation_fee?: Coin[] | null;
    fee_collector?: string | null;
  };
} | {
  add_reserved_usernames: {
    usernames: string[];
  };
} | {
  admin_channel_create: {
    collaborators?: string[] | null;
    description: string;
    recipient: string;
    salt: Binary;
    user_name: string;
  };
};
export type AssetType = {
  nft: {
    collection_id: string;
    onft_id: string;
  };
} | {
  off_chain: {
    description: string;
    media_uri: string;
    name: string;
  };
};
export type Binary = string;
export type QueryMsg = {
  is_paused: {};
} | {
  pausers: {};
} | {
  channel_details: {
    channel_id?: string | null;
    user_name?: string | null;
  };
} | {
  channels: {
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  channel_id: {
    user_name: string;
  };
} | {
  playlist: {
    channel_id: string;
    playlist_name: string;
  };
} | {
  playlists: {
    channel_id: string;
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  config: {};
} | {
  assets: {
    channel_id: string;
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  asset: {
    channel_id: string;
    publish_id: string;
  };
} | {
  reserved_usernames: {
    limit?: number | null;
    start_after?: string | null;
  };
};
export interface Asset {
  asset_type: AssetType;
  channel_id: string;
  is_visible: boolean;
  publish_id: string;
}
export type ArrayOfAsset = Asset[];
export interface ChannelDetails {
  channel_id: string;
  collaborators: Addr[];
  description: string;
  onft_id: string;
  user_name: string;
}
export type String = string;
export type ArrayOfChannelDetails = ChannelDetails[];
export interface ChannelConractConfig {
  admin: Addr;
  channel_creation_fee: Coin[];
  channels_collection_id: string;
  channels_collection_name: string;
  channels_collection_symbol: string;
  fee_collector: Addr;
}
export type Boolean = boolean;
export type ArrayOfString = string[];
export interface Playlist {
  assets: [string, string][];
  playlist_name: string;
}
export type ArrayOfPlaylist = Playlist[];