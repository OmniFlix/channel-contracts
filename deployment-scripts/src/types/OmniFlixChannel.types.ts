/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Uint128 = string;
export type Addr = string;
export interface InstantiateMsg {
  accepted_tip_denoms: string[];
  channel_creation_fee: Coin[];
  channel_token_details: ChannelTokenDetails;
  channels_collection_details: ChannelsCollectionDetails;
  fee_collector: Addr;
  protocol_admin: Addr;
  reserved_usernames: ReservedUsername[];
}
export interface Coin {
  amount: Uint128;
  denom: string;
}
export interface ChannelTokenDetails {
  description: string;
  extensible: boolean;
  media_uri: string;
  nsfw: boolean;
  preview_uri: string;
  royalty_share: string;
  transferable: boolean;
  uri_hash: string;
}
export interface ChannelsCollectionDetails {
  collection_id: string;
  collection_name: string;
  collection_symbol: string;
  data: string;
  description: string;
  preview_uri: string;
  schema: string;
  uri: string;
  uri_hash: string;
}
export interface ReservedUsername {
  address?: Addr | null;
  username: string;
}
export type ExecuteMsg = {
  admin_set_config: {
    channel_creation_fee?: Coin[] | null;
    fee_collector?: string | null;
    protocol_admin?: string | null;
  };
} | {
  admin_remove_assets: {
    asset_keys: [string, string][];
    refresh_flags?: boolean | null;
  };
} | {
  admin_manage_reserved_usernames: {
    add_usernames?: ReservedUsername[] | null;
    remove_usernames?: string[] | null;
  };
} | {
  pause: {};
} | {
  unpause: {};
} | {
  set_pausers: {
    pausers: string[];
  };
} | {
  asset_publish: {
    asset_source: AssetSource;
    channel_id: string;
    is_visible: boolean;
    metadata: AssetMetadata;
    playlist_name?: string | null;
    salt: Binary;
  };
} | {
  asset_unpublish: {
    channel_id: string;
    publish_id: string;
  };
} | {
  asset_update_details: {
    channel_id: string;
    description?: string | null;
    is_visible?: boolean | null;
    media_uri?: string | null;
    name?: string | null;
    publish_id: string;
  };
} | {
  asset_flag: {
    channel_id: string;
    flag: Flag;
    publish_id: string;
  };
} | {
  playlist_create: {
    channel_id: string;
    playlist_name: string;
  };
} | {
  playlist_delete: {
    channel_id: string;
    playlist_name: string;
  };
} | {
  playlist_add_asset: {
    asset_channel_id: string;
    channel_id: string;
    playlist_name: string;
    publish_id: string;
  };
} | {
  playlist_remove_asset: {
    channel_id: string;
    playlist_name: string;
    publish_id: string;
  };
} | {
  playlist_refresh: {
    channel_id: string;
    playlist_name: string;
  };
} | {
  channel_create: {
    banner_picture?: string | null;
    channel_name: string;
    description?: string | null;
    payment_address: Addr;
    profile_picture?: string | null;
    salt: Binary;
    user_name: string;
  };
} | {
  channel_delete: {
    channel_id: string;
  };
} | {
  channel_update_details: {
    banner_picture?: string | null;
    channel_id: string;
    channel_name?: string | null;
    description?: string | null;
    payment_address?: string | null;
    profile_picture?: string | null;
  };
} | {
  channel_tip: {
    amount: Coin;
    asset_id?: string | null;
    channel_id: string;
  };
} | {
  channel_add_collaborator: {
    channel_id: string;
    collaborator_address: string;
    collaborator_details: ChannelCollaborator;
  };
} | {
  channel_remove_collaborator: {
    channel_id: string;
    collaborator_address: string;
  };
} | {
  channel_follow: {
    channel_id: string;
  };
} | {
  channel_unfollow: {
    channel_id: string;
  };
};
export type AssetSource = {
  nft: {
    collection_id: string;
    onft_id: string;
  };
} | {
  off_chain: {};
};
export type Binary = string;
export type Flag = ("n_s_f_w" | "explicit" | "spam" | "hateful") | {
  other: string;
};
export type Role = "admin" | "publisher" | "moderator";
export type Decimal = string;
export interface AssetMetadata {
  description: string;
  media_uri: string;
  name: string;
}
export interface ChannelCollaborator {
  role: Role;
  share: Decimal;
}
export type QueryMsg = {
  is_paused: {};
} | {
  pausers: {};
} | {
  channel_details: {
    channel_id: string;
  };
} | {
  channel_metadata: {
    channel_id: string;
  };
} | {
  channel: {
    channel_id: string;
  };
} | {
  channels: {
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  channel_id: {
    user_name: string;
  };
} | {
  playlist: {
    channel_id: string;
    playlist_name: string;
  };
} | {
  playlists: {
    channel_id: string;
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  config: {};
} | {
  assets: {
    channel_id: string;
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  asset: {
    channel_id: string;
    publish_id: string;
  };
} | {
  reserved_usernames: {
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  get_channel_collaborator: {
    channel_id: string;
    collaborator_address: Addr;
  };
} | {
  get_channel_collaborators: {
    channel_id: string;
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  followers_count: {
    channel_id: string;
  };
} | {
  followers: {
    channel_id: string;
    limit?: number | null;
    start_after?: string | null;
  };
};
export interface AssetResponse {
  asset: Asset;
  flags: FlagInfo[];
  metadata: AssetMetadata;
}
export interface Asset {
  asset_source: AssetSource;
  channel_id: string;
  is_visible: boolean;
  publish_id: string;
}
export interface FlagInfo {
  count: number;
  flag: Flag;
}
export type ArrayOfAssetResponse = AssetResponse[];
export interface ChannelResponse {
  banner_picture?: string | null;
  channel_id: string;
  channel_name: string;
  collaborators: CollaboratorInfo[];
  description?: string | null;
  follower_count: number;
  onft_id: string;
  payment_address: string;
  profile_picture?: string | null;
  user_name: string;
}
export interface CollaboratorInfo {
  address: string;
  role: string;
  share: Decimal;
}
export interface ChannelDetails {
  channel_id: string;
  onft_id: string;
  payment_address: Addr;
  user_name: string;
}
export type String = string;
export interface ChannelMetadata {
  banner_picture?: string | null;
  channel_name: string;
  description?: string | null;
  profile_picture?: string | null;
}
export type ArrayOfChannelResponse = ChannelResponse[];
export interface ChannelConractConfig {
  accepted_tip_denoms: string[];
  auth_details: AuthDetails;
  channel_creation_fee: Coin[];
  channels_collection_id: string;
}
export interface AuthDetails {
  fee_collector: Addr;
  protocol_admin: Addr;
}
export type ArrayOfString = string[];
export type Uint64 = number;
export type ArrayOfCollaboratorInfo = CollaboratorInfo[];
export type Boolean = boolean;
export interface Playlist {
  assets: [string, string][];
  playlist_name: string;
}
export type ArrayOfPlaylist = Playlist[];
export type ArrayOfReservedUsername = ReservedUsername[];