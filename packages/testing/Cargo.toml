[package]
name        = "testing"
authors     = ["Adnan Deniz Corlu <adenizcorlu@gmail.com>"]
description = "A unique testing package designed to execute and query Stargate in multi-test environment."
version     = { workspace = true }
edition     = { workspace = true }
homepage    = { workspace = true }
repository  = { workspace = true }
license     = { workspace = true }

exclude = [
  # Those files are rust-optimizer artifacts. You might want to commit them for convenience but they should not be part of the source code publication.
  "contract.wasm",
  "hash.txt",
]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[features]
# use library feature to disable all instantiate/execute/query exports
library = []

[dependencies]
cosmwasm-storage = { workspace = true }
omniflix-std = { workspace=true }
cosmwasm-schema      = { workspace = true }
cosmwasm-std = { version = "2.0.0", features = ["iterator", "staking", "stargate"] }
cw-controllers       = { workspace = true }
cw2                  = { workspace = true }
cw-storage-plus = "2.0.0"
cw-utils = "2.0.0"
schemars = "0.8.16"
cw-multi-test = { version = "2.0.0" }
anyhow = "1.0.79"
itertools = "0.12.0"
serde = "1.0.195"
thiserror = "1.0.56"
prost = {version = "0.13.3", default-features = false, features = ["prost-derive"]}
omniflix-channel = { path = "../../contracts/omniflix-channel"}